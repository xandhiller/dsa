!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
DATA_TYPE	dynamic_arrays.c	19;"	d	file:
FALSE	dynamic_arrays.c	18;"	d	file:
HEAD	dynamic_arrays.c	20;"	d	file:
MAX_CHUNK_SIZE	dynamic_arrays.c	16;"	d	file:
TAIL	dynamic_arrays.c	21;"	d	file:
TRUE	dynamic_arrays.c	17;"	d	file:
blah	scratch/testing_structs.c	/^struct blah {$/;"	s	file:
blah_t	scratch/testing_structs.c	/^typedef struct blah blah_t;$/;"	t	typeref:struct:blah	file:
bool	dynamic_arrays.c	/^typedef uint8_t bool;$/;"	t	file:
da_append	dynamic_arrays.c	/^void da_append(DATA_TYPE val, dynamic_array_t* da) {$/;"	f
da_delete	dynamic_arrays.c	/^bool da_delete(DATA_TYPE val, dynamic_array_t* da) {$/;"	f
da_display	dynamic_arrays.c	/^void da_display(dynamic_array_t* da) {$/;"	f
da_expand	dynamic_arrays.c	/^bool da_expand(dynamic_array_t* da) {$/;"	f
da_get_length	dynamic_arrays.c	/^int da_get_length(dynamic_array_t* da) {$/;"	f
da_get_nb_vals	dynamic_arrays.c	/^int da_get_nb_vals(dynamic_array_t* da) {$/;"	f
da_init	dynamic_arrays.c	/^void da_init(dynamic_array_t* da) {$/;"	f
da_pop	dynamic_arrays.c	/^int da_pop(bool location, dynamic_array_t* da) { $/;"	f
da_set_length	dynamic_arrays.c	/^void da_set_length(dynamic_array_t* da, int new_length) {$/;"	f
da_set_nb_vals	dynamic_arrays.c	/^void da_set_nb_vals(dynamic_array_t* da, int new_nb_vals) {$/;"	f
data	dynamic_arrays.c	/^    DATA_TYPE* data;    \/\/ Data array$/;"	m	struct:dynamic_array	file:
data	scratch/testing_structs.c	/^    int data;$/;"	m	struct:blah	file:
dynamic_array	dynamic_arrays.c	/^struct dynamic_array {$/;"	s	file:
dynamic_array_t	dynamic_arrays.c	/^typedef struct dynamic_array dynamic_array_t;$/;"	t	typeref:struct:dynamic_array	file:
length	dynamic_arrays.c	/^    int length;         \/\/ Length of allocated space taken up by the array$/;"	m	struct:dynamic_array	file:
main	dynamic_arrays.c	/^int main (int argc, char *argv[]) {$/;"	f
main	scratch/testing_structs.c	/^int main (int argc, char *argv[]) {$/;"	f
mod_blah	scratch/testing_structs.c	/^void mod_blah(blah_t* b) {$/;"	f
nb_vals	dynamic_arrays.c	/^    int nb_vals;        \/\/ Number of meaningful values stored in the array$/;"	m	struct:dynamic_array	file:
